{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyzhang04/Desktop/DinoGame/dino/src/DinoGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DinoGame = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameSpeed, setGameSpeed] = useState(8);\n  const [obstacleSpacing, setObstacleSpacing] = useState(250);\n  const [gameOver, setGameOver] = useState(false);\n  const dinoRef = useRef(5);\n  const obstacleRef = useRef(null);\n  const handleJump = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    dinoRef.current.classList.add(\"jump\");\n    setTimeout(() => {\n      dinoRef.current.classList.remove(\"jump\");\n    }, 500);\n  };\n  const handleRestart = () => {\n    setIsPlaying(false);\n    setScore(0);\n    setGameSpeed(8);\n    setObstacleSpacing(250);\n    setGameOver(false);\n  };\n  useEffect(() => {\n    let gameLoop;\n    let lastObstacle;\n    const checkCollision = () => {\n      const dino = dinoRef.current.getBoundingClientRect();\n      const obstacle = obstacleRef.current.getBoundingClientRect();\n      if (obstacle.left <= dino.right - 25 && obstacle.right >= dino.left + 25 && obstacle.top <= dino.bottom && obstacle.bottom >= dino.top) {\n        setGameOver(true);\n        cancelAnimationFrame(gameLoop);\n      }\n    };\n    const gameStep = () => {\n      setScore(prevScore => prevScore + 1);\n      setGameSpeed(prevSpeed => prevSpeed + 0.05);\n      setObstacleSpacing(prevSpacing => prevSpacing - 0.5);\n      checkCollision();\n      gameLoop = requestAnimationFrame(gameStep);\n    };\n    if (isPlaying) {\n      gameStep();\n    }\n    return () => cancelAnimationFrame(gameLoop);\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-score\",\n      children: gameOver ? \"Game Over\" : `Score: ${score}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-playarea\",\n      onClick: handleJump,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dino\",\n        ref: dinoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 100 100\",\n        \"stroke-width\": \"1.5\",\n        stroke: \"currentColor\",\n        class: \"w-6 h-6\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          d: \"M12 12.75c1.148 0 2.278.08 3.383.237 1.037.146 1.866.966 1.866 2.013 0 3.728-2.35 6.75-5.25 6.75S6.75 18.728 6.75 15c0-1.046.83-1.867 1.866-2.013A24.204 24.204 0 0112 12.75zm0 0c2.883 0 5.647.508 8.207 1.44a23.91 23.91 0 01-1.152 6.06M12 12.75c-2.883 0-5.647.508-8.208 1.44.125 2.104.52 4.136 1.153 6.06M12 12.75a2.25 2.25 0 002.248-2.354M12 12.75a2.25 2.25 0 01-2.248-2.354M12 8.25c.995 0 1.971-.08 2.922-.236.403-.066.74-.358.795-.762a3.778 3.778 0 00-.399-2.25M12 8.25c-.995 0-1.97-.08-2.922-.236-.402-.066-.74-.358-.795-.762a3.734 3.734 0 01.4-2.253M12 8.25a2.25 2.25 0 00-2.248 2.146M12 8.25a2.25 2.25 0 012.248 2.146M8.683 5a6.032 6.032 0 01-1.155-1.002c.07-.63.27-1.222.574-1.747m.581 2.749A3.75 3.75 0 0115.318 5m0 0c.427-.283.815-.62 1.155-.999a4.471 4.471 0 00-.575-1.752M4.921 6a24.048 24.048 0 00-.392 3.314c1.668.546 3.416.914 5.223 1.082M19.08 6c.205 1.08.337 2.187.392 3.314a23.882 23.882 0 01-5.223 1.082\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"obstacle\",\n        style: {\n          marginLeft: `${obstacleSpacing}px`\n        },\n        ref: obstacleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DinoGame, \"A79ZR/YD3SxqVns2DwxJHIYNrOw=\");\n_c = DinoGame;\nexport default DinoGame;\nvar _c;\n$RefreshReg$(_c, \"DinoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DinoGame","isPlaying","setIsPlaying","score","setScore","gameSpeed","setGameSpeed","obstacleSpacing","setObstacleSpacing","gameOver","setGameOver","dinoRef","obstacleRef","handleJump","current","classList","add","setTimeout","remove","handleRestart","gameLoop","lastObstacle","checkCollision","dino","getBoundingClientRect","obstacle","left","right","top","bottom","cancelAnimationFrame","gameStep","prevScore","prevSpeed","prevSpacing","requestAnimationFrame","marginLeft"],"sources":["/Users/zacharyzhang04/Desktop/DinoGame/dino/src/DinoGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst DinoGame = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameSpeed, setGameSpeed] = useState(8);\n  const [obstacleSpacing, setObstacleSpacing] = useState(250);\n  const [gameOver, setGameOver] = useState(false);\n\n  const dinoRef = useRef(5);\n  \n\n  const obstacleRef = useRef(null);\n\n  const handleJump = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    dinoRef.current.classList.add(\"jump\");\n    setTimeout(() => {\n      dinoRef.current.classList.remove(\"jump\");\n    }, 500);\n  };\n\n  const handleRestart = () => {\n    setIsPlaying(false);\n    setScore(0);\n    setGameSpeed(8);\n    setObstacleSpacing(250);\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    let gameLoop;\n    let lastObstacle;\n\n    const checkCollision = () => {\n      const dino = dinoRef.current.getBoundingClientRect();\n      const obstacle = obstacleRef.current.getBoundingClientRect();\n      if (\n        obstacle.left <= dino.right - 25 &&\n        obstacle.right >= dino.left + 25 &&\n        obstacle.top <= dino.bottom &&\n        obstacle.bottom >= dino.top\n      ) {\n        setGameOver(true);\n        cancelAnimationFrame(gameLoop);\n      }\n    };\n\n    const gameStep = () => {\n      setScore((prevScore) => prevScore + 1);\n      setGameSpeed((prevSpeed) => prevSpeed + 0.05);\n      setObstacleSpacing((prevSpacing) => prevSpacing - 0.5);\n      checkCollision();\n      gameLoop = requestAnimationFrame(gameStep);\n    };\n\n    if (isPlaying) {\n      gameStep();\n    }\n\n    return () => cancelAnimationFrame(gameLoop);\n  }, [isPlaying]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-score\">{gameOver ? \"Game Over\" : `Score: ${score}`}</div>\n      {gameOver ? (\n        <button onClick={handleRestart}>Restart</button>\n      ) : (\n        <div className=\"game-playarea\" onClick={handleJump}>\n          <div className=\"dino\" ref={dinoRef} />\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 100 100\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 12.75c1.148 0 2.278.08 3.383.237 1.037.146 1.866.966 1.866 2.013 0 3.728-2.35 6.75-5.25 6.75S6.75 18.728 6.75 15c0-1.046.83-1.867 1.866-2.013A24.204 24.204 0 0112 12.75zm0 0c2.883 0 5.647.508 8.207 1.44a23.91 23.91 0 01-1.152 6.06M12 12.75c-2.883 0-5.647.508-8.208 1.44.125 2.104.52 4.136 1.153 6.06M12 12.75a2.25 2.25 0 002.248-2.354M12 12.75a2.25 2.25 0 01-2.248-2.354M12 8.25c.995 0 1.971-.08 2.922-.236.403-.066.74-.358.795-.762a3.778 3.778 0 00-.399-2.25M12 8.25c-.995 0-1.97-.08-2.922-.236-.402-.066-.74-.358-.795-.762a3.734 3.734 0 01.4-2.253M12 8.25a2.25 2.25 0 00-2.248 2.146M12 8.25a2.25 2.25 0 012.248 2.146M8.683 5a6.032 6.032 0 01-1.155-1.002c.07-.63.27-1.222.574-1.747m.581 2.749A3.75 3.75 0 0115.318 5m0 0c.427-.283.815-.62 1.155-.999a4.471 4.471 0 00-.575-1.752M4.921 6a24.048 24.048 0 00-.392 3.314c1.668.546 3.416.914 5.223 1.082M19.08 6c.205 1.08.337 2.187.392 3.314a23.882 23.882 0 01-5.223 1.082\" />\n</svg>\n          <div className=\"obstacle\" style={{ marginLeft: `${obstacleSpacing}px` }} ref={obstacleRef} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DinoGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}