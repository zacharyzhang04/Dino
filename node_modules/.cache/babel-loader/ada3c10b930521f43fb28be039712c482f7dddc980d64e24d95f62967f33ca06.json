{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyzhang04/Desktop/DinoGame/dino/src/DinoGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./DinoGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DinoGame = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameSpeed, setGameSpeed] = useState(8);\n  const [obstacleSpacing, setObstacleSpacing] = useState(250);\n  const [gameOver, setGameOver] = useState(false);\n  const [isCooldown, setIsCooldown] = useState(false);\n  const dinoRef = useRef(null);\n  const obstacleRef = useRef(null);\n  const [isClicked, setIsClicked] = useState(false);\n  const handleJump = () => {\n    if (!isPlaying) setIsPlaying(true);\n    if (isCooldown) return;\n    setIsClicked(true);\n    setIsCooldown(true);\n    setTimeout(() => {\n      setIsClicked(false);\n      setIsCooldown(false);\n    }, 500);\n  };\n  const handleRestart = () => {\n    setIsPlaying(false);\n    setScore(0);\n    setGameSpeed(8);\n    setObstacleSpacing(250);\n    setGameOver(false);\n  };\n  useEffect(() => {\n    let gameLoop;\n    let lastObstacle;\n    const checkCollision = () => {\n      const obstacle = obstacleRef.getBoundingClientRect();\n      const dino = dinoRef.current.getBoundingClientRect();\n      if (obstacle.left <= dino.right - 25 && obstacle.right >= dino.left + 25 && obstacle.top <= dino.bottom && obstacle.bottom >= dino.top) {\n        setGameOver(true);\n        cancelAnimationFrame(gameLoop);\n      }\n    };\n    const gameStep = () => {\n      setScore(prevScore => prevScore + 1);\n      setGameSpeed(prevSpeed => prevSpeed + 0.05);\n      setObstacleSpacing(prevSpacing => prevSpacing - 0.5);\n      gameLoop = requestAnimationFrame(gameStep);\n    };\n    if (isPlaying) {\n      gameStep();\n    }\n    return () => cancelAnimationFrame(gameLoop);\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-score\",\n      children: gameOver ? \"Game Over\" : `Score: ${score}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"container\", {\n      className: \"game-playarea\",\n      onClick: handleJump,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: dinoRef,\n        className: `player ${isClicked ? 'jump' : ''}`,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 23 23\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          d: \"M12 12.75c1.148 0 2.278.08 3.383.237 1.037.146 1.866.966 1.866 2.013 0  3.728-2.35 6.75-5.25 6.75S6.75 18.728 6.75 15c0-1.046.83-1.867 1.866-2.013A24.204 24.204 0 0112 12.75zm0 0c2.883 0 5.647.508  8.207 1.44a23.91 23.91 0 01-1.152 6.06M12 12.75c-2.883 0-5.647.508-8.208 1.44.125 2.104.52 4.136 1.153 6.06M12 12.75a2.25 2.25  0 002.248-2.354M12 12.75a2.25 2.25 0 01-2.248-2.354M12 8.25c.995 0 1.971-.08 2.922-.236.403-.066.74-.358.795-.762a3.778 3.778  0 00-.399-2.25M12 8.25c-.995 0-1.97-.08-2.922-.236-.402-.066-.74-.358-.795-.762a3.734 3.734 0 01.4-2.253M12 8.25a2.25 2.25 0  00-2.248 2.146M12 8.25a2.25 2.25 0 012.248 2.146M8.683 5a6.032 6.032 0 01-1.155-1.002c.07-.63.27-1.222.574-1.747m.581 2.749A3.75  3.75 0 0115.318 5m0 0c.427-.283.815-.62 1.155-.999a4.471 4.471 0 00-.575-1.752M4.921 6a24.048 24.048 0 00-.392 3.314c1.668.546  3.416.914 5.223 1.082M19.08 6c.205 1.08.337 2.187.392 3.314a23.882 23.882 0 01-5.223 1.082\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: obstacleRef,\n        className: \"obstacle\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 23 23\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          \"stroke-linecap\": \"round\",\n          \"stroke-linejoin\": \"round\",\n          d: \"M10.05 4.575a1.575 1.575 0 10-3.15 0v3m3.15-3v-1.5a1.575 1.575 0 013.15  0v1.5m-3.15 0l.075 5.925m3.075.75V4.575m0 0a1.575 1.575 0 013.15 0V15M6.9 7.575a1.575 1.575 0 10-3.15 0v8.175a6.75 6.75 0 006.75  6.75h2.018a5.25 5.25 0 003.712-1.538l1.732-1.732a5.25 5.25 0 001.538-3.712l.003-2.024a.668.668 0 01.198-.471 1.575 1.575 0  10-2.228-2.228 3.818 3.818 0 00-1.12 2.687M6.9 7.575V12m6.27 4.318A4.49 4.49 0 0116.35 15m.002 0h-.002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(DinoGame, \"A0hyPt94lJgk1vRfZog9DZ5kyR0=\");\n_c = DinoGame;\nexport default DinoGame;\nvar _c;\n$RefreshReg$(_c, \"DinoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","DinoGame","isPlaying","setIsPlaying","score","setScore","gameSpeed","setGameSpeed","obstacleSpacing","setObstacleSpacing","gameOver","setGameOver","isCooldown","setIsCooldown","dinoRef","obstacleRef","isClicked","setIsClicked","handleJump","setTimeout","handleRestart","gameLoop","lastObstacle","checkCollision","obstacle","getBoundingClientRect","dino","current","left","right","top","bottom","cancelAnimationFrame","gameStep","prevScore","prevSpeed","prevSpacing","requestAnimationFrame"],"sources":["/Users/zacharyzhang04/Desktop/DinoGame/dino/src/DinoGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./DinoGame.css\";\n\nconst DinoGame = () => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [score, setScore] = useState(0);\n    const [gameSpeed, setGameSpeed] = useState(8);\n    const [obstacleSpacing, setObstacleSpacing] = useState(250);\n    const [gameOver, setGameOver] = useState(false);\n    const [isCooldown, setIsCooldown] = useState(false);\n\n    const dinoRef = useRef(null);\n    const obstacleRef = useRef(null);\n\n    const [isClicked, setIsClicked] = useState(false);\n    const handleJump = () => {\n        if (!isPlaying) setIsPlaying(true);\n        if (isCooldown) return;\n\n        setIsClicked(true);\n        setIsCooldown(true);\n\n        setTimeout(() => {\n        setIsClicked(false);\n        setIsCooldown(false);\n        }, 500);\n    }\n\n    const handleRestart = () => {\n        setIsPlaying(false);\n        setScore(0);\n        setGameSpeed(8);\n        setObstacleSpacing(250);\n        setGameOver(false);\n    };\n\n    useEffect(() => {\n        let gameLoop;\n        let lastObstacle;\n\n        const checkCollision = () => {\n            const obstacle = obstacleRef.getBoundingClientRect();\n            const dino = dinoRef.current.getBoundingClientRect();\n            if (obstacle.left <= dino.right - 25 &&\n                obstacle.right >= dino.left + 25 &&\n                obstacle.top <= dino.bottom &&\n                obstacle.bottom >= dino.top) {\n                setGameOver(true);\n                cancelAnimationFrame(gameLoop);\n            }\n        };\n        const gameStep = () => {\n            setScore((prevScore) => prevScore + 1);\n            setGameSpeed((prevSpeed) => prevSpeed + 0.05);\n            setObstacleSpacing((prevSpacing) => prevSpacing - 0.5);\n            gameLoop = requestAnimationFrame(gameStep);\n        };\n\n        if (isPlaying) {\n            gameStep();\n        }\n\n        return () => cancelAnimationFrame(gameLoop);\n    }, [isPlaying]);\n    \n\n    return (\n        <div className=\"game-container\">\n        <div className=\"game-score\">{gameOver ? \"Game Over\" : `Score: ${score}`}</div>\n        {gameOver ? (<button onClick={handleRestart}>Restart</button>) : (\n            \n            <container className=\"game-playarea\" onClick={handleJump}>\n                <svg ref={dinoRef} className={`player ${isClicked ? 'jump' : ''}`}\n                xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 23 23\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 12.75c1.148 0 2.278.08 3.383.237 1.037.146 1.866.966 1.866 2.013 0 \n                3.728-2.35 6.75-5.25 6.75S6.75 18.728 6.75 15c0-1.046.83-1.867 1.866-2.013A24.204 24.204 0 0112 12.75zm0 0c2.883 0 5.647.508 \n                8.207 1.44a23.91 23.91 0 01-1.152 6.06M12 12.75c-2.883 0-5.647.508-8.208 1.44.125 2.104.52 4.136 1.153 6.06M12 12.75a2.25 2.25 \n                0 002.248-2.354M12 12.75a2.25 2.25 0 01-2.248-2.354M12 8.25c.995 0 1.971-.08 2.922-.236.403-.066.74-.358.795-.762a3.778 3.778 \n                0 00-.399-2.25M12 8.25c-.995 0-1.97-.08-2.922-.236-.402-.066-.74-.358-.795-.762a3.734 3.734 0 01.4-2.253M12 8.25a2.25 2.25 0 \n                00-2.248 2.146M12 8.25a2.25 2.25 0 012.248 2.146M8.683 5a6.032 6.032 0 01-1.155-1.002c.07-.63.27-1.222.574-1.747m.581 2.749A3.75 \n                3.75 0 0115.318 5m0 0c.427-.283.815-.62 1.155-.999a4.471 4.471 0 00-.575-1.752M4.921 6a24.048 24.048 0 00-.392 3.314c1.668.546 \n                3.416.914 5.223 1.082M19.08 6c.205 1.08.337 2.187.392 3.314a23.882 23.882 0 01-5.223 1.082\" /></svg>\n                <svg ref={obstacleRef} className=\"obstacle\"\n                xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 23 23\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M10.05 4.575a1.575 1.575 0 10-3.15 0v3m3.15-3v-1.5a1.575 1.575 0 013.15 \n                0v1.5m-3.15 0l.075 5.925m3.075.75V4.575m0 0a1.575 1.575 0 013.15 0V15M6.9 7.575a1.575 1.575 0 10-3.15 0v8.175a6.75 6.75 0 006.75 \n                6.75h2.018a5.25 5.25 0 003.712-1.538l1.732-1.732a5.25 5.25 0 001.538-3.712l.003-2.024a.668.668 0 01.198-.471 1.575 1.575 0 \n                10-2.228-2.228 3.818 3.818 0 00-1.12 2.687M6.9 7.575V12m6.27 4.318A4.49 4.49 0 0116.35 15m.002 0h-.002\" /></svg>\n                \n                \n                \n            </container>\n        )}\n        </div>\n    );\n};\n\n\nexport default DinoGame;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}